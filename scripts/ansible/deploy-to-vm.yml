- name: Deploy new dropbase to linux machine
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    deploy_user: "{{ ansible_user }}"
    deploy_dir: "/opt/dropbase"

  tasks:
    - name: Debug message
      debug:
        msg: Using {{ deploy_user }} user to deploy dropbase to {{ ansible_host }}

    - name: Add Docker GPG apt Key (Ubuntu)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Add repository into sources list (Ubuntu)
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present
        filename: docker
      when: ansible_distribution == 'Ubuntu'

    - name: Install Docker (Ubuntu)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install Docker (Amazon Linux)
      package:
        name:
          - docker
        state: latest
      when: ansible_distribution == 'Amazon'

    - name: Install required packages
      package:
        name:
          - python3-pip
        state: latest

    - name: Remove python3-requests # amazon linux uses an old version of requests
      package:
        name: python3-requests
        state: absent

    - name: Install pip packages
      pip:
        name:
          - docker==6.1.3
          - docker-compose==1.29.2
          - urllib3==1.26.18

    - name: Make sure deploy user belong to group and "docker" group
      user:
        name: "{{ deploy_user }}"
        groups:
          - docker
        append: yes
      become: yes

    - name: Make sure docker service is enabled and started
      service:
        name: docker
        state: started
        enabled: yes

    - name: Make sure dropbase folder exists
      file:
        path: "{{ deploy_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Create docker-compose.yml file
      template:
        src: ../../docker-compose.yml
        dest: "{{ deploy_dir }}/docker-compose.yml"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: '0644'

    - name: Copy requirements-custom.txt to the server
      copy:
        src: ../../requirements-custom.txt
        dest: "{{ deploy_dir }}/requirements-custom.txt"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"

    - name: Synchronize workspace to the server
      synchronize:
        src: ../../workspace
        dest: "{{ deploy_dir }}"
        delete: true
      become: false

    - name: Create app .env file
      copy:
        src: ../../.env
        dest: "{{ deploy_dir }}/.env"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: '0644'

    - name: Updating CORS_ORIGINS environment variables
      lineinfile:
        path: "{{ deploy_dir }}/.env"
        regexp: '^CORS_ORIGINS='
        line: CORS_ORIGINS='["http://{{ ansible_host }}:3030", "http://www.{{ ansible_host }}:3030"]'

    - name: Synchronize worker to the server
      synchronize:
        src: ../../worker
        dest: "{{ deploy_dir }}"
        delete: true
      become: false

    - name: Build worker image
      shell: docker build -t dropbase/worker "{{ deploy_dir }}/worker"

    - name: Pull and start the docker containers
      community.docker.docker_compose:
        project_src: "{{ deploy_dir }}"
        build: false
        pull: true
      environment:
        HOST_WORKSPACE_PATH: "{{ deploy_dir }}"
