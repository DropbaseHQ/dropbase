# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2024-03-13T17:52:19+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class Widget1State(BaseModel):
    input1: Optional[int] = Field(None, title='Input1')
    input2: Optional[str] = Field(None, title='Input2')
    input3: Optional[int] = Field(None, title='Input3')
    input4: Optional[float] = Field(None, title='Input4')
    input5: Optional[str] = Field(None, title='Input5')


class WidgetsState(BaseModel):
    widget1: Widget1State


class Table1State(BaseModel):
    order_id: Optional[int] = Field(None, title='Order Id')
    user_id: Optional[int] = Field(None, title='User Id')
    product_name: Optional[str] = Field(None, title='Product Name')
    quantity: Optional[int] = Field(None, title='Quantity')
    total_price: Optional[str] = Field(None, title='Total Price')
    order_date: Optional[str] = Field(None, title='Order Date')


class TablesState(BaseModel):
    table1: Table1State


class State(BaseModel):
    widgets: WidgetsState
    tables: TablesState
